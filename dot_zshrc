autoload -Uz compinit

if [[ -n ${ZDOTDIR}/.zcompdump(#qN.mh+24) ]]; then
    compinit -C
else
    compinit -i
fi

plugins=(
	git
	kubectl
	terraform
	zsh-autosuggestions
	zsh-syntax-highlighting
	globalias
	kube-ps1
	azure
)

export ZSH="$HOME/.oh-my-zsh"
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
ZSH_THEME="robbyrussell"

source $ZSH/oh-my-zsh.sh

if command -v fzf &>/dev/null; then
  source <(fzf --zsh)
fi

# Enable completion for all Zsh commands
# autoload -Uz compinit
# compinit -C

# Set the directory for your completions (optional)
fpath=(~/.zsh/completions $fpath)

# Source the completion files (optional)
for f in ~/.zsh/completions/*.zsh; do
    source $f
done

# Environment variables

# Aliases
alias ls="ls --color"
alias c="clear"
alias g="git"
alias m="minikube"
alias gc="git commit"
alias gp="git push"
alias gst="git status"
alias gfuck="git reset --soft HEAD~"
alias tf="terraform"
alias k="kubectl"
alias ks="kubens"
alias myip="curl -s https://ipv4.wtfismyip.com/json | jq '.YourFuckingIPAddress'"
alias aws-profiles="cat ~/.aws/credentials | grep -o '\[[^]]*\]'"
alias kx="kubectx"
alias azc="az account set -s"
alias azl="az account list -o table"
alias co="git checkout"
alias grep="\grep"
alias ax="azctx"
alias kux="kubie ctx"
alias codi="code-insiders"
alias z="zed"

GLOBALIAS_FILTER_VALUES=(
grep
)

precmd() {
    precmd() {
        echo
    }
}


KUBE_PS1_SYMBOL_PADDING=true
KUBE_PS1_SYMBOL_CUSTOM='img'
KUBE_PS1_SEPARATOR=''
KUBE_PS1_SUFFIX=')'
ZSH_THEME_AZURE_PREFIX='ðŸ’  '
ZSH_THEME_AZURE_SUFFIX=' '
NEWLINE=$'\n'
PROMPT='$(kube_ps1) | %F{blue}$(azure_prompt_info)%f ${NEWLINE}'$PROMPT

# Custom transient prompt
zle-line-init() {
  emulate -L zsh

  [[ $CONTEXT == start ]] || return 0

  while true; do
    zle .recursive-edit
    local -i ret=$?
    [[ $ret == 0 && $KEYS == $'\4' ]] || break
    [[ -o ignore_eof ]] || exit 0
  done

  local saved_prompt=$PROMPT
  local saved_rprompt=$RPROMPT
  # PROMPT='%# '
  PROMPT='âžœ '
  RPROMPT=''
  zle .reset-prompt
  PROMPT=$saved_prompt
  RPROMPT=$saved_rprompt

  if (( ret )); then
    zle .send-break
  else
    zle .accept-line
  fi
  return ret
}

zle -N zle-line-init

# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Lazy loading

if [ $commands[kubectl] ]; then

  # Placeholder 'kubectl' shell function:
  # Will only be executed on the first call to 'kubectl'
  kubectl() {

    # Remove this function, subsequent calls will execute 'kubectl' directly
    unfunction "$0"

    # Load auto-completion
    source <(kubectl completion zsh)

    # Execute 'kubectl' binary
    $0 "$@"
  }
fi

# load .zsh_copilot_aliases if it exists
# this is a workaround to speed up init of the shell

if [ -f ~/.zsh_copilot_aliases ]; then
    . ~/.zsh_copilot_aliases
else 
  gh copilot alias -- zsh > .zsh_copilot_aliases
  . ~/.zsh_copilot_aliases
fi

# correct approach:
# eval "$(gh copilot alias -- zsh)"

function bootstrap_mac {
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    
    brew install \
    argocd \
    awscli \
    azure-cli \
    bat \
    deepl \
    fzf \
    gh \
    google-chrome \
    helm \
    helm-ls \
    jq \
    k9s \
    kubectx \
    kubie \
    kubernetes-cli \
    kube-ps1 \
    minikube \
    ollama \
    raycast \
    telnet \
    terraform-docs \
    terraform-ls \
    terraform-lsp \
    tflint \
    tfenv \
    zed \
    zsh \
    zsh-autosuggestions \
    zsh-completions \
    zsh-syntax-highlighting \
    httpie
}
